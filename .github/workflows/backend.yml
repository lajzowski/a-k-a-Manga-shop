name: Deploy shop-backend to Server

on:
  push:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Окружение для запуска'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - PROD

env:
  ENV: ${{ github.event.inputs.environment || 'DEV' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build app
        run: |
          cd backend
          npm run build

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          cd backend
          docker build -t shop-backend .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-shop-backend

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    environment: ${{ github.event.inputs.environment || 'DEV' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Sanitize branch name
        id: sanitize
        run: echo "TAG_NAME=${GITHUB_REF_NAME//\//-}" >> $GITHUB_ENV

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "${{ secrets.GHCR_PAT }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            sudo docker pull ghcr.io/a-k-a-manga/aka-shop-backend:${{ env.TAG_NAME }}
            sudo docker stop shop-backend || true
            sudo docker rm shop-backend || true
            sudo docker run -d \
              --name shop-backend \
              --restart unless-stopped \
              -p 3000:3000 \
              -v "${{ vars.SHOP_DB_PATH }}:/app/db.sqlite" \
              -e DB_NAME="${{ vars.DB_NAME }}" \
              -e DB_USER="${{ vars.DB_USER }}" \
              -e DB_PASSWORD="${{ vars.DB_PASSWORD }}" \
              -e DB_HOST="${{ vars.DB_HOST }}" \
              -e DB_PORT="${{ vars.DB_PORT }}" \
              -e API_TOKEN="${{ vars.API_TOKEN }}" \
              ghcr.io/a-k-a-manga/aka-shop-backend:${{ env.TAG_NAME }}